# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pr: none

pool:
  vmImage: ubuntu-latest

parameters:
  - name: Testsuite_Version
    displayName: 'Testsuite Versions'
    type: string
    default: 'Latest'
    # description: 'Enter the Testsuite Version (optional).'

  - name: Mainsuite_feed_Version
    displayName: 'Mainsuite Versions'
    type: string
    default: 'None'
  
  - name: VersionOption
    displayName: 'Version Options'
    type: string
    default: 'None'
    values:
      - None
      - major 
      - minor 
      - patch
variables:
  - name: Mainsuite_Version
    value: ${{ parameters.Mainsuite_feed_Version }}

stages:
  
# Build testsuite with latest version and using new mainsuite jar
# - ${{ if eq(parameters.Testsuite_Version, 'Latest') }}:
- ${{ if and(eq(parameters.Testsuite_Version, 'Latest'), ne(parameters.Mainsuite_feed_Version, 'None'), ne(parameters.VersionOption, 'None')) }}:
  - stage: Build_testsuite_latest_version  
    displayName: Build testsuite with latest version 
    jobs:
    - job: TarCovertion_Build_testsuite_latest_version
      steps:
      - task: Bash@3
        displayName: Override Mainsuite Version
        inputs:
          targetType: 'inline'
          script: |
            pwd
            sed 's/[0-9]\+\.[0-9]\+\.[0-9]\+-SNAPSHOT/$(Mainsuite_Version)/g' pom.xml
      - task: Maven@4
        displayName: Build Testsuite 
        inputs:
          mavenPomFile: 'pom.xml'
          publishJUnitResults: false
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: true
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
          goals: 'package'
          options: '-Dmaven.test.failure.ignore=true' 
      - task: Bash@3
        displayName: Convert to Tar
        inputs:
          targetType: 'inline'
          script: |
            pwd
            tar -cvf testsuite.tar --directory=. *
            
      - task: CopyFiles@2
        displayName: Copy the tar file
        inputs:
          Contents: '*.tar'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
  
      - task: UniversalPackages@0
        displayName: Publish the TAR file to feed
        inputs:
          command: 'publish'
          publishDirectory: '$(Build.ArtifactStagingDirectory)'
          feedsToUsePublish: 'internal'
          vstsFeedPublish: '18c872ec-cca1-465c-8997-d91402298e49/bbd4590d-d732-49e2-891a-5ab52345f8cd'
          vstsFeedPackagePublish: 'testsuite.tar'
          versionOption: '${{ parameters.VersionOption }}'
          packagePublishDescription: 'publish tar to azure feed'

# Build testsuite with latest version and using pom.xml noted mainsuite jar
- ${{ if and(eq(parameters.Testsuite_Version, 'Latest'), eq(parameters.Mainsuite_feed_Version, 'None'), ne(parameters.VersionOption, 'None')) }}:
  - stage: Build_testsuite_latest_version  
    displayName: Build testsuite with latest version 
    jobs:
    - job: TarCovertion_Build_testsuite_latest_version
      variables:
      - name: Mainsuite_Version
        value: ${{ parameters.Mainsuite_feed_Version }}
      steps:
      - task: Maven@4
        displayName: Build Testsuite 
        inputs:
          mavenPomFile: 'pom.xml'
          publishJUnitResults: false
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: true
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
          goals: 'package'
          options: '-Dmaven.test.failure.ignore=true' 
      - task: Bash@3
        displayName: Convert to Tar
        inputs:
          targetType: 'inline'
          script: |
            pwd
            tar -cvf testsuite.tar --directory=. *
            
      - task: CopyFiles@2
        displayName: Copy the tar file
        inputs:
          Contents: '*.tar'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
  
      - task: UniversalPackages@0
        displayName: Publish the TAR file to feed
        inputs:
          command: 'publish'
          publishDirectory: '$(Build.ArtifactStagingDirectory)'
          feedsToUsePublish: 'internal'
          vstsFeedPublish: '18c872ec-cca1-465c-8997-d91402298e49/bbd4590d-d732-49e2-891a-5ab52345f8cd'
          vstsFeedPackagePublish: 'testsuite.tar'
          versionOption: '${{ parameters.VersionOption }}'
          packagePublishDescription: 'publish tar to azure feed'


# Build testsuite with selected version and selected mainsuite jar
# - ${{ if ne(parameters.Testsuite_Version, 'Latest') }}:
- ${{ if and(ne(parameters.Testsuite_Version, 'Latest'), ne(parameters.Mainsuite_feed_Version, 'None')) }}:
  - stage: Build_testsuite_selected_version
    displayName: Build testsuite selected version
    jobs:
    - job: TarCovertion_Build_testsuite_selected_version     
      steps:
      - task: Bash@3
        displayName: Create unzip Directory
        inputs:
          targetType: 'inline'
          script: |
            mkdir unzipfolder
            mkdir tarfolder
      - task: UniversalPackages@0
        displayName: Download the TAR file from feed
        inputs:
          command: 'download'
          downloadDirectory: '$(System.DefaultWorkingDirectory)/tarfolder'
          feedsToUse: 'internal'
          vstsFeed: '18c872ec-cca1-465c-8997-d91402298e49/bbd4590d-d732-49e2-891a-5ab52345f8cd'
          vstsFeedPackage: '2392dfaf-1c23-40a5-a829-e75d0104a0fa'
          vstsPackageVersion: '${{ parameters.Testsuite_Version }}'
      - task: Bash@3
        displayName: Unzip the Tar file
        inputs:
          targetType: 'inline'
          script: |
            tar -xvf $(System.DefaultWorkingDirectory)/tarfolder/testsuite.tar -C $(System.DefaultWorkingDirectory)/unzipfolder
            echo "Display tar File"
            ls $(System.DefaultWorkingDirectory)/tarfolder
            echo "Display Untar File"
            ls $(System.DefaultWorkingDirectory)/unzipfolder
      
      - task: Bash@3
        displayName: Override Mainsuite Version
        inputs:
          targetType: 'inline'
          script: |
            pwd
            CD /unzipfolder
            sed 's/[0-9]\+\.[0-9]\+\.[0-9]\+-SNAPSHOT/$(Mainsuite_Version)/g' pom.xml
      - task: Maven@4
        displayName: Build Testsuite 
        inputs:
          mavenPomFile: 'pom.xml'
          publishJUnitResults: false
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: true
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
          goals: 'package'
          options: '-Dmaven.test.failure.ignore=true' 

# Build testsuite with selected version and pom.xml noted mainsuite jar
# - ${{ if ne(parameters.Testsuite_Version, 'Latest') }}:
- ${{ if and(ne(parameters.Testsuite_Version, 'Latest'), eq(parameters.Mainsuite_feed_Version, 'None')) }}:
  - stage: Build_testsuite_selected_version
    displayName: Build testsuite selected version
    jobs:
    - job: TarCovertion_Build_testsuite_selected_version     
      steps:
      - task: Bash@3
        displayName: Create unzip Directory
        inputs:
          targetType: 'inline'
          script: |
            mkdir unzipfolder
            mkdir tarfolder
      - task: UniversalPackages@0
        displayName: Download the TAR file from feed
        inputs:
          command: 'download'
          downloadDirectory: '$(System.DefaultWorkingDirectory)/tarfolder'
          feedsToUse: 'internal'
          vstsFeed: '18c872ec-cca1-465c-8997-d91402298e49/bbd4590d-d732-49e2-891a-5ab52345f8cd'
          vstsFeedPackage: '2392dfaf-1c23-40a5-a829-e75d0104a0fa'
          vstsPackageVersion: '${{ parameters.Testsuite_Version }}'
      - task: Bash@3
        displayName: Unzip the Tar file
        inputs:
          targetType: 'inline'
          script: |
            tar -xvf $(System.DefaultWorkingDirectory)/tarfolder/testsuite.tar -C $(System.DefaultWorkingDirectory)/unzipfolder
            echo "Display tar File"
            ls $(System.DefaultWorkingDirectory)/tarfolder
            echo "Display Untar File"
            ls $(System.DefaultWorkingDirectory)/unzipfolder

      - task: Maven@4
        displayName: Build Testsuite 
        inputs:
          mavenPomFile: 'pom.xml'
          publishJUnitResults: false
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: true
          effectivePomSkip: false
          sonarQubeRunAnalysis: false
          goals: 'package'
          options: '-Dmaven.test.failure.ignore=true' 
          
          
    