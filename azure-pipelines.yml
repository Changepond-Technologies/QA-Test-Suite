# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pr: none

pool:
  vmImage: ubuntu-latest
  
stages:
- stage: TarCovertion
  displayName: Covert to Tar
  jobs:
  - job: TarCovertion
    steps:
    
    # - task: Maven@4
    #   displayName: Build Testsuite 
    #   inputs:
    #     mavenPomFile: 'pom.xml'
    #     publishJUnitResults: false
    #     testResultsFiles: '**/surefire-reports/TEST-*.xml'
    #     javaHomeOption: 'JDKVersion'
    #     jdkVersionOption: '1.11'
    #     mavenVersionOption: 'Default'
    #     mavenAuthenticateFeed: true
    #     effectivePomSkip: false
    #     sonarQubeRunAnalysis: false
    #     goals: 'package'
    - task: Bash@3
      displayName: Covert to Tar
      inputs:
        targetType: 'inline'
        script: |
          cd /home/vsts/work/1/s/
          tar -cvf testsuite.tar --directory=. *
          
    - task: ArtifactoryGenericUpload@2
      displayName: upload tar to JFrog
      inputs:
        artifactoryService: 'JFrogServiceConnectionNew'
        specSource: 'taskConfiguration'
        fileSpec: |
          {
            "files": [
              {
                "pattern": "$(Pipeline.Workspace)/*.tar",
                "target": "qatest-new-1"
              }
            ]
          }
        collectBuildInfo: true
        buildName: '$(Build.DefinitionName)'
        buildNumber: '$(Build.BuildNumber)'
        projectKey: 'qatest'
        failNoOp: true
    
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          mkdir testJarDirectory
          ls
  
    - task: ArtifactoryGenericDownload@3
      displayName: Download tar from JFrog
      inputs:
        connection: 'JFrogServiceConnectionNew'
        specSource: 'taskConfiguration'
        fileSpec: |
          {
            "files": [
              {
                "pattern": "*.tar",
                "target": "qatest-new-1"
              }
            ]
          }
        collectBuildInfo: true
        buildName: '$(Build.DefinitionName)'
        buildNumber: '$(Build.BuildNumber)'
        projectKey: 'qatest'
        failNoOp: true

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          file qatest-new-1
          tar -xvf qatest-new-1
    