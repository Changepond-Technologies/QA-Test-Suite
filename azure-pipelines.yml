# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pr: none

pool:
  vmImage: ubuntu-latest

# variables:
# - name: repositoryname
#   value: cucumberNew-libs-snapshot
  
stages:
- stage: TarCovertion
  displayName: Covertion to Tar
  jobs:
  - job: TarCovertion
    steps:
  
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          cd /home/vsts/work/1/s/
          tar -cvf testsuite.tar --directory=. *
          
    - task: ArtifactoryGenericUpload@2
      displayName: upload tar to JFrog
      inputs:
        artifactoryService: 'JFrogServiceConnectionNew'
        specSource: 'taskConfiguration'
        fileSpec: |
          {
            "files": [
              {
                "pattern": "$(Pipeline.Workspace)/*.tar",
                "target": "qatest-new-1"
              }
            ]
          }
        collectBuildInfo: true
        buildName: '$(Build.DefinitionName)'
        buildNumber: '$(Build.BuildNumber)'
        projectKey: 'qatest'
        failNoOp: true
    
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          ls
  
    - task: ArtifactoryGenericDownload@3
      displayName: Download tar from JFrog
      inputs:
        connection: 'JFrogServiceConnectionNew'
        specSource: 'taskConfiguration'
        fileSpec: |
          {
            "files": [
              {
                "pattern": "*.tar",
                "target": "qatest-new-1"
              }
            ]
          }
        collectBuildInfo: true
        buildName: '$(Build.DefinitionName)'
        buildNumber: '$(Build.BuildNumber)'
        projectKey: 'qatest'
        failNoOp: true

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |


          artifact_path="/home/vsts/work/1/s/qatest-new-1/testsuite.tar"

          mkdir /home/vsts/work/1/s/qatest

          extract_dir="/home/vsts/work/1/s/qatest"

          # Check if the artifact exists
          if [ -f "$artifact_path" ]; then
            # Create the extraction directory if it doesn't exist
            mkdir -p "$extract_dir"
            
            # Extract the tarball (without gzip)
            tar -xvf "$artifact_path" -C "$extract_dir"
          else
            echo "Artifact not found: $artifact_path"
          fi
    